// ==========================================================================
// MIXINS SCSS - Padrão BEM
// ==========================================================================

// Mixin para breakpoints responsivos
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint--sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint--md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint--lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint--xl) { @content; }
  } @else if $breakpoint == 2xl {
    @media (min-width: $breakpoint--2xl) { @content; }
  }
}

// Mixin para flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Mixin para grid
@mixin grid($columns: 1, $gap: $spacing--md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Mixin para botões
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing--sm $spacing--md;
  border: $border-width--thin solid transparent;
  border-radius: $border-radius--md;
  font-size: $font-size--sm;
  font-weight: $font-weight--medium;
  line-height: $line-height--tight;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition--fast;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($color-primary, 0.1);
  }
}

@mixin button-variant($background, $color, $border-color: transparent) {
  background-color: $background;
  color: $color;
  border-color: $border-color;
  
  &:hover:not(:disabled) {
    background-color: darken($background, 10%);
  }
  
  &:active:not(:disabled) {
    background-color: darken($background, 15%);
  }
}

// Mixin para inputs de formulário
@mixin input-base {
  width: 100%;
  padding: $spacing--sm $spacing--md;
  border: $border-width--thin solid $color-gray--300;
  border-radius: $border-radius--md;
  font-size: $font-size--base;
  line-height: $line-height--normal;
  transition: border-color $transition--fast, box-shadow $transition--fast;
  
  &:focus {
    outline: none;
    border-color: $color-primary;
    box-shadow: 0 0 0 3px rgba($color-primary, 0.1);
  }
  
  &:disabled {
    background-color: $color-gray--100;
    cursor: not-allowed;
  }
  
  &.input--error {
    border-color: $color-danger;
    
    &:focus {
      box-shadow: 0 0 0 3px rgba($color-danger, 0.1);
    }
  }
}

// Mixin para cards
@mixin card-base {
  background-color: $color-white;
  border-radius: $border-radius--lg;
  box-shadow: $shadow--sm;
  border: $border-width--thin solid $color-gray--200;
}

// Mixin para transições
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property $transition--normal, comma);
  }
  transition: $transitions;
}

// Mixin para truncate de texto
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Mixin para múltiplas linhas de truncate
@mixin text-truncate-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Mixin para scrollbar customizada
@mixin custom-scrollbar($width: 8px, $track-color: $color-gray--200, $thumb-color: $color-gray--400) {
  &::-webkit-scrollbar {
    width: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $border-radius--full;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $border-radius--full;
    
    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// Mixin para animações de loading
@mixin loading-spinner($size: 20px, $color: $color-primary) {
  width: $size;
  height: $size;
  border: 2px solid transparent;
  border-top-color: $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Mixin para sombras de elevação
@mixin elevation($level: 1) {
  @if $level == 1 {
    box-shadow: $shadow--sm;
  } @else if $level == 2 {
    box-shadow: $shadow--md;
  } @else if $level == 3 {
    box-shadow: $shadow--lg;
  } @else if $level == 4 {
    box-shadow: $shadow--xl;
  }
}

// Mixin para estados de hover e focus
@mixin interactive-states($base-color, $hover-color, $focus-color) {
  &:hover {
    background-color: $hover-color;
  }
  
  &:focus {
    background-color: $focus-color;
    outline: none;
    box-shadow: 0 0 0 3px rgba($base-color, 0.1);
  }
}
